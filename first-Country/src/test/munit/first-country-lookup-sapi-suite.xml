<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="first-country-lookup-sapi-suite.xml" />
	<munit:test name="first-country-lookup-sapi-console-test" doc:id="7929e387-9bf0-4f86-aff9-a7b19932e826" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="965efd7a-53aa-44cb-8b14-81d71a6c5fda" processor="http:listener">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="/console/*" attributeName="path" />
					<munit-tools:with-attribute whereValue="HTTP_Listener_config" attributeName="config-ref" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="4557ab40-afee-4153-bd37-bfee6db191bf" processor="apikit:console">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="first-country-lookup-sapi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="082949c4-8cfc-4766-8ccf-6b25921d8f63" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="4969f2cd-257c-4f97-91b3-a8e0000551c1" >
				<munit:payload value="#[readUrl('classpath://firstcountrylookupsapiconsoletest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://firstcountrylookupsapiconsoletest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to first-country-lookup-sapi-console" doc:id="300d16ab-ee93-404b-8599-b1ba6904d11e" name="first-country-lookup-sapi-console"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="b5a9f80c-dafc-4aaa-99a7-c430f138533a" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import firstcountrylookupsapiconsoletest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\countries:first-country-lookup-sapi-config-test" doc:id="b2cc1eb9-1ca7-42c4-8fbd-001085bc8a8b" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="a3258a0d-11f3-4b08-84d5-9d332ae9b59a" >
				<munit:payload value="#[readUrl('classpath://getcountriesfirstcountrylookupsapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcountriesfirstcountrylookupsapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcountriesfirstcountrylookupsapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\countries:first-country-lookup-sapi-config" doc:id="b7132bfe-e7a4-4338-9800-443bc38e3627" name="get:\countries:first-country-lookup-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="7e0cf0d4-00ef-49d2-81f5-e2ef7d2f9b6d" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcountriesfirstcountrylookupsapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="e83ac869-0fea-47f4-87a0-1edc21996a99" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="722f2009-69d0-4a72-9d92-85011ceadf47" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\countries\(isocode):first-country-lookup-sapi-config-test" doc:id="1f0b876b-bc6f-441e-9a63-7aac65306b49" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="321786b4-0dc8-4dae-8d8f-c75b16132ccf" >
				<munit:payload value="#[readUrl('classpath://getcountriesisocodefirstcountrylookupsapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcountriesisocodefirstcountrylookupsapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcountriesisocodefirstcountrylookupsapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\countries\(isocode):first-country-lookup-sapi-config" doc:id="dde779a7-d44c-40ae-a154-0102704f56ec" name="get:\countries\(isocode):first-country-lookup-sapi-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="4e708b64-15db-45ec-a04f-afbdbb78bc49" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcountriesisocodefirstcountrylookupsapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Flow Reference" doc:id="c6278f96-5b74-4c40-82a9-790c102f3b7e" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bcc92798-9146-41f8-9cd6-89ad1542f80b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="first-country-lookup-sapi-suiteTest-APIKIT:BAD_REQUEST" doc:id="2ba0b92d-6999-4ed5-9348-1483cfe194c9" expectedErrorType="APIKIT:BAD_REQUEST" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="7327a60b-2b03-47db-aab1-36d3e7163846" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="first-country-lookup-sapi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="fbefd81c-c48f-4161-becd-f5bcf04f7e3f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="9732f012-d48c-48ed-833b-f1b02b94b132" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="79cfadb1-d00f-4324-8f0a-7f836a446c8a" actual="#[vars.httpStatus]" expected="#[400]" />
		</munit:validation>
	</munit:test>
	<munit:test name="first-country-lookup-sapi-suiteTest-APIKIT:METHOD_NOT_ALLOWED" doc:id="77e6ad57-51d5-4db9-bd1f-b2251d1bdfab" expectedErrorType="APIKIT:METHOD_NOT_ALLOWED" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="d6113ea0-6bdc-4458-b568-d35c337f5f23" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="first-country-lookup-sapi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="fbefd81c-c48f-4161-becd-f5bcf04f7e3f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:METHOD_NOT_ALLOWED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="15672fba-dc28-45cf-9c96-405aac535d69" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="39946aef-d8d1-4de2-bbe9-d271e646f96a" actual="#[vars.httpStatus]" expected="#[405]" />
		</munit:validation>
	</munit:test>
	<munit:test name="first-country-lookup-sapi-suiteTest-APIKIT:NOT_ACCEPTABLE" doc:id="319e2015-050a-46cc-b337-c2e400a1ab14" expectedErrorType="APIKIT:NOT_ACCEPTABLE" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="763dea2b-fbbe-4881-aae5-cdb981b291d8" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="first-country-lookup-sapi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="fbefd81c-c48f-4161-becd-f5bcf04f7e3f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_ACCEPTABLE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="233de182-6623-4255-9bb8-6c55dbb144fb" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="858d46b4-ff25-4cc2-8dc0-7ea720b5bd74" actual="#[vars.httpStatus]" expected="#[406]" />
		</munit:validation>
	</munit:test>
	<munit:test name="first-country-lookup-sapi-suiteTest-APIKIT:NOT_FOUND" doc:id="f7484688-8306-484c-a7fc-07e3de38f06a" expectedErrorType="APIKIT:NOT_FOUND" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="2db05d29-3db4-4a38-897f-1d73c93a9b99" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="first-country-lookup-sapi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="fbefd81c-c48f-4161-becd-f5bcf04f7e3f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_FOUND" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="9dbda08b-0326-4330-bac7-0e9741f467f6" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="409ded7b-a7ca-475f-a7c8-faec58c722a4" actual="#[vars.httpStatus]" expected="#[404]" />
		</munit:validation>
	</munit:test>
	<munit:test name="first-country-lookup-sapi-suiteTest-APIKIT:NOT_IMPLEMENTED" doc:id="6bbb022c-052a-40a5-83ac-df50b33e5fe6" expectedErrorType="APIKIT:NOT_IMPLEMENTED" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="ac65a30b-3e09-4dd5-a7f0-434f139c3e20" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="first-country-lookup-sapi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="fbefd81c-c48f-4161-becd-f5bcf04f7e3f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:NOT_IMPLEMENTED" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="c8e80ab4-2ebc-4044-bc87-fce5c4c7c4d4" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="a9014d84-f7ea-41cb-b6d9-a0a400afebf7" actual="#[vars.httpStatus]" expected="#[501]" />
		</munit:validation>
	</munit:test>
	<munit:test name="first-country-lookup-sapi-suiteTest-APIKIT:UNSUPPORTED_MEDIA_TYPE" doc:id="42a89670-b859-4a2d-a135-8b66842fef2e" expectedErrorType="APIKIT:UNSUPPORTED_MEDIA_TYPE" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="b3a5ff20-0188-4a8a-a814-0e1db3e97a34" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="first-country-lookup-sapi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="fbefd81c-c48f-4161-becd-f5bcf04f7e3f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:UNSUPPORTED_MEDIA_TYPE" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="153354e6-f566-43f1-98c2-1ca4e1136fe1" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="ad5a1eea-4961-4861-ab36-4cf24c3d9a4d" actual="#[vars.httpStatus]" expected="#[415]" />
		</munit:validation>
	</munit:test>
	<munit:test name="first-country-lookup-sapi-suiteTest-APIKIT:ANY" doc:id="04636e1a-97ce-40de-9fa3-a71a8fa3bd9e" expectedErrorType="APIKIT:ANY" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="93dfe4bc-6570-4bb5-a212-fdf2cb2f6618" processor="apikit:router" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="first-country-lookup-sapi-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="fbefd81c-c48f-4161-becd-f5bcf04f7e3f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:ANY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow Reference" doc:id="ecdb82cc-eefc-4fc2-8a4e-26133f52463a" name="first-country-lookup-sapi-main" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="b0d3571a-7971-401c-b65d-68730d7b693d" />
		</munit:validation>
	</munit:test>
	<munit:test name="first-country-lookup-sapi-main-test" doc:id="44242352-308a-4218-bbbb-a4e0f4a399a8" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock APIkit Router" doc:id="b6d049fa-a92c-45e4-ab1c-b2fa5f9ce535" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fbefd81c-c48f-4161-becd-f5bcf04f7e3f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://firstcountrylookupsapimaintest\mock_payload.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://firstcountrylookupsapimaintest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_.dwl')]" />
						<munit-tools:variable key="httpStatus" value="#[readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_1.dwl')]" />
						<munit-tools:variable key="isocode" value="#[output application/java --- readUrl('classpath://firstcountrylookupsapimaintest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="50ec4b94-072b-437a-954a-051ae6d54ef6" >
				<munit:payload value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://firstcountrylookupsapimaintest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to first-country-lookup-sapi-main" doc:id="b078056b-cf77-4c35-939e-3a82c984e2aa" name="first-country-lookup-sapi-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="25da9b6c-1d5d-4d69-b7c4-2257c4084433" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import firstcountrylookupsapimaintest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
